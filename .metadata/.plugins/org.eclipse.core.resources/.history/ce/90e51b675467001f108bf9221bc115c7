package com.wip.service..imp;

import java.util.List;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cache.annotation.CacheEvict;
import org.springframework.cache.annotation.Cacheable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.github.pagehelper.PageInfo;
import com.wip.constant.ErrorConstant;
import com.wip.constant.Types;
import com.wip.constant.WebConst;
import com.wip.dao.CommentDao;
import com.wip.dao.RelationShipDao;
import com.wip.dao.TutorialDao;
import com.wip.dto.cond.TutorialCond;
import com.wip.exception.BusinessException;
import com.wip.model.MetaDomain;
import com.wip.model.TutorialDomain;
import com.wip.service.meta.MetaService;
import com.wip.service.tutorial.TutorialService;
@Service
public class TutorialServiceImp implements TutorialService{
	@Autowired
	private TutorialDao tutorialDao;
	
	@Autowired
    private MetaService metaService;

    @Autowired
    private RelationShipDao relationShipDao;

    @Autowired
    private CommentDao commentDao;
    
    @Transactional
    @Override
    @CacheEvict(value = {"articleCache", "articleCaches"}, allEntries = true, beforeInvocation = true)
    public void addTutorial(TutorialDomain tutorialDomain) {
    	if (null == tutorialDomain)
            throw BusinessException.withErrorCode(ErrorConstant.Common.PARAM_IS_EMPTY);

        if (StringUtils.isBlank(tutorialDomain.getTitle()))
            throw BusinessException.withErrorCode(ErrorConstant.Tutorial.TITLE_CAN_NOT_EMPTY);

        if (tutorialDomain.getTitle().length() > WebConst.MAX_TITLE_COUNT)
            throw BusinessException.withErrorCode(ErrorConstant.Tutorial.TITLE_IS_TOO_LONG);

        if (StringUtils.isBlank(tutorialDomain.getTutorial()))
            throw BusinessException.withErrorCode(ErrorConstant.Tutorial.CONTENT_CAN_NOT_EMPTY);

        if (tutorialDomain.getTutorial().length() > WebConst.MAX_CONTENT_COUNT)
            throw BusinessException.withErrorCode(ErrorConstant.Tutorial.CONTENT_IS_TOO_LONG);

        // 取到标签和分类
        String tags = tutorialDomain.getTags();
        String categories = tutorialDomain.getCategories();

        // 添加文章
        tutorialDao.addTutorial(tutorialDomain);

        // 添加分类和标签
        int tid = tutorialDomain.getTid();
        metaService.addMetas(tid, tags, Types.TAG.getType());
        metaService.addMetas(tid, categories, Types.CATEGORY.getType());
	}

    @Override
    @Cacheable(value = "articleCache", key = "'articleById_' + #p0")
    public TutorialDomain getTutorialById(Integer tid) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void updateTutorialById(TutorialDomain TutorialDomain) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public PageInfo<TutorialDomain> getTutorialByCond(TutorialCond tutorialCond, int page, int limit) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void deleteTutorialById(Integer tid) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public List<TutorialDomain> getTutorialByCategory(String category) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<TutorialDomain> getTutorialByTags(MetaDomain tags) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void updateTutorialByCid(TutorialDomain tutorial) {
		// TODO Auto-generated method stub
		
	}

}
